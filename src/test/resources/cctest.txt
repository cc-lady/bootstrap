----------------------Kubernetes网络基础----------------------
位于同一网络中的各Pod实例可直接互相通信，但“用后即弃”的Pod自身的IP地址显然无法作为可持续使用的访问入口。
Service资源用于为Pod提供固定访问端点，并基于该端点将流量调度至一组Pod实例之上。

同一Pod内部的各容器具有“超亲密”关系，它们共享网络协议栈、网络设备、路由、IP地址和端口等网络资源，可以基于本地回环接口lo互相通信。每个Pod上还可附加一组“存储卷”（volume）资源，它们同样可由内部所有容器使用而实现数据共享。持久类型的存储卷还能够确保在容器终止后被重启，甚至容器被删除后数据也不会丢失。

Service是由基于匹配规则在集群中挑选出的一组Pod对象的集合、访问这组Pod集合的固定IP地址，以及对请求进行调度的方法等功能所构成的一种API资源类型，是Pod资源的代理和负载均衡器。（Pod的固定访问入口）
借助CoreDNS提供的服务发现及名称解析功能，通过Service的DNS格式的名称进行访问。

Kubernetes网络基础
Kubernetes的网络中存在4种主要类型的通信：同一Pod内的容器间通信、各Pod彼此间通信、Pod与Service间的通信以及集群外部的流量与Service间的通信。
同一Pod内的容器间通信           --->  内部回环lo地址，共享网络和存储
各Pod彼此间通信                 --->  网络插件，Pod网络接口，集群CLUSTER ip
Pod与Service间的通信            --->  Kube-proxy配置为节点的iptables或ipvs规则，将流量调度到pod
集群外部的流量与Service间的通信 --->  NodePort 和LoadBalancer 类型的Service，以及 Ingress